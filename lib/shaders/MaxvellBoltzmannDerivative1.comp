#version 460

layout(local_size_x = 1) in;

layout(std430, binding = 0) buffer InputMeans {
    float dataMeans[];
};

layout(std430, binding = 1) buffer InputArgs {
    float dataArgs[];
};

layout(std430, binding = 2) buffer Output {
    float dataOut[];
};

const float one_over_sqrt_two_pi = 0.398942280401432702863218082712;

const float four_over_sqrt_pi = 2.2567583341910251477923178062431;

float deviation (in float mean) {
  return 1. / 10. * mean + 10.;
}

void main() {
    uint index = gl_GlobalInvocationID.x;
    float mean = dataMeans[index];
    float arg = dataArgs[index];
    float arg_square = arg * arg;
    float mean_square = mean * mean;
    dataOut[index] = four_over_sqrt_pi * 2. * arg * (1 - arg_square / mean_square) *
           exp(-arg_square / mean_square) / (mean * mean_square);
}

